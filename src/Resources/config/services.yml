services:
    _defaults:
            # automatically injects dependencies in your services
            autowire: true
            # this means you cannot fetch services directly from the container via $container->get()
            # if you need to do this, you can override this setting on individual services
            public: false

    # EVENT LISTENERS
    MNC\RestBundle\EventListener\ApiExceptionListener:
        arguments: ['%kernel.environment%']
        tags:
            - { name: kernel.event_listener, event: kernel.exception }

    MNC\RestBundle\EventListener\RequestBodyListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 150 }

    MNC\RestBundle\EventListener\FormatListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: -40 }

    MNC\RestBundle\EventListener\RestControllerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.controller }

    # MAKERS
    MNC\RestBundle\Maker\MakeResource:
        tags:
            - { name: maker.command }

    # LIFORM
    liform.add_schema_extension:
        class: Limenius\Liform\Form\Extension\AddLiformExtension
        tags:
            - { name: form.type_extension, extended_type: '@Symfony\Component\Form\Extension\Core\Type\FormType' }

    liform.serializer.form_error_normalizer:
        class: Limenius\Liform\Serializer\Normalizer\FormErrorNormalizer
        arguments: ['@translator.data_collector']
        tags:
            - { name: serializer.normalizer, priority: -10 }

    liform.serializer.initial_values_normalizer:
        class: Limenius\Liform\Serializer\Normalizer\InitialValuesNormalizer
        tags:
            - { name: serializer.normalizer, priority: -10 }

    liform.resolver:
        class: Limenius\Liform\Resolver
        public: true

    liform:
        class: Limenius\Liform\Liform
        public: true
        arguments: ['@liform.resolver']

    liform.guesser.validator:
        class: Limenius\Liform\Guesser\ValidatorGuesser
        arguments: ['@validator.mapping.class_metadata_factory']

    # VOTERS
    MNC\RestBundle\Security\OwnableResourceVoter:
        tags:
            - { name: security.voter }

    # SERVICES
    MNC\RestBundle\Fractalizer\Fractalizer:
        arguments:
            - '@Symfony\Component\HttpFoundation\RequestStack'
            - '@router'
            - '@MNC\RestBundle\Fractalizer\ContainerAwareManager'
        public: true

    MNC\RestBundle\Fractalizer\ContainerAwareManager:
        public: true
        calls:
            - [setContainer, ['@service_container']]